<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dylan.mybatis.mapper.auth.UserMapper">
    <resultMap id="user" type="com.dylan.mybatis.entity.User">
        <id column="kid" property="kid"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="gender" property="gender"/>
        <result column="create_time" property="createTime"/>
        <result column="deleted" property="deleted"/>
    </resultMap>

    <sql id="baseColumn">
        `kid`, `username`, `password`, `gender`, `create_time`, `deleted`
    </sql>

    <select id="getAllUsers" resultMap="user">
        select
        <include refid="baseColumn"/>
        from tb_user;
    </select>

    <select id="getUserByKid" parameterType="string" resultMap="user">
        select
        <include refid="baseColumn"/>
        from tb_user
        where kid = #{kid}
    </select>

    <select id="getByCondition1" resultType="com.dylan.mybatis.entity.User">
        select
        <include refid="baseColumn"/>
        from tb_user
        <where>
            <if test="gender != null and gender != ''">
                and gender like concat('%', #{gender}, '%')
            </if>
            <if test="username != null and username != ''">
                and username like concat('%', #{username}, '%')
            </if>
        </where>
    </select>

    <select id="getByCondition2" resultType="com.dylan.mybatis.entity.User">
        select
        <include refid="baseColumn"/>
        from tb_user
        where
        <choose>
            <when test="gender != null">
                gender = #{gender}
            </when>
            <when test="username != null">
                username = #{username}
            </when>
            <when test="deleted != null">
                deleted = #{deleted}
            </when>
            <otherwise>
                1 = 1
            </otherwise>
        </choose>
    </select>

    <insert id="addUser" parameterType="com.dylan.mybatis.entity.User">
        insert into tb_user
        <trim prefix="(" suffix=")">
            <include refid="baseColumn"/>
        </trim>
        value(#{kid}, #{username}, #{password}, #{gender}, #{createTime}, #{deleted})
    </insert>

    <insert id="addUserBatch" parameterType="com.dylan.mybatis.entity.User">
        insert into tb_user
        values
        <foreach collection="userList" item="u" separator=",">
            (#{u.kid}, #{u.username}, #{u.password}, #{u.gender}, #{u.createTime}, #{u.deleted})
        </foreach>
    </insert>

    <update id="updateUser" parameterType="com.dylan.mybatis.entity.User">
        update tb_user
        set username    = #{username},
            password    = #{password},
            gender      = #{gender},
            create_time = #{createTime},
            deleted     = #{deleted}
        where kid = #{kid}
    </update>

    <delete id="deleteUserByKid" parameterType="string">
        delete
        from tb_user
        where kid = #{kid}
    </delete>

    <delete id="deleteUsersBatch" parameterType="list">
        delete
        from tb_user
        where kid in
        <foreach collection="kids" item="kid" open="(" separator="," close=")">
            #{kid}
        </foreach>
    </delete>


</mapper>